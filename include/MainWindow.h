  /// \file MainWindow.h
/*
 *
 * MainWindow.h header template automatically generated by a class generator
 * Creation date : mer. mars 22 2017
 *
 * This file is part of DQM4HEP libraries.
 *
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef MAINWINDOW_H
#define MAINWINDOW_H

// -- qt headers
#include <QMainWindow>
#include <QObject>
#include <QTableWidget>
#include <QTreeWidget>
#include <QColor>
#include <QTimer>
#include <QStringList>
#include <QCheckBox>
#include <QComboBox>
#include <QLineEdit>
#include <QPushButton>

// -- dqm4hep headers
#include <dqm4hep/Logger.h>
#include <dqm4hep/Logging.h>
#include <dqm4hep/Client.h>

// -- json headers
#include <json/json.h>

using Client = dqm4hep::net::Client;
using LoggerPtr = dqm4hep::core::Logger::LoggerPtr;
using LogLevel = dqm4hep::core::Logger::Level;

/**
 * MainWindow class
 */
class MainWindow : public QMainWindow
{
  Q_OBJECT

public:
  /**
   * Constructor
   */
  MainWindow();

  /**
   * Destructor
   */
  ~MainWindow();

  /**
   * Set the maximum number of logger entries to handle
   * @param maxSize the max size
   */
  void setMaxSize(size_t maxSize);

signals:
  void loggerEntryReceived(const Json::Value &value);

private slots:
  void addLoggerEntry(const Json::Value &value);
  void logLevelChanged(int index);
  void updateLogTable();
  void clear();

private:
  void receiveLoggerEntry(const std::string &entryStr);
  void build();
  QColor color(LogLevel level);
  QTableWidgetItem *createTableItem(const QString &label, const QColor &background);
  bool hideMessage(const QString &logger, LogLevel level, const QString &message, const QString &hostName);

private:
  size_t                      m_maxSize;
  Client                      m_client;
  LoggerPtr                   m_loggerPtr;
  LogLevel                    m_logLevel;

  QTableWidget               *m_pLogEntriesTable;
  QTreeWidget                *m_pLoggersTree;
  QCheckBox                  *m_pShowLastMessage;
  QComboBox                  *m_pLogLevelBox;
  QLineEdit                  *m_pLoggerEdit;
  QLineEdit                  *m_pMessageEdit;
  QLineEdit                  *m_pHostNameEdit;
  QPushButton                *m_pClearButton;

  uint64_t                    m_loggerEntryId;
};

#endif  //  MAINWINDOW_H
